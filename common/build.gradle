plugins {
    id 'java'
}

version '1.0.0'

sourceCompatibility = 1.8


dependencies {
    api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.4.2' // https://github.com/FasterXML/jackson-databind/issues/3627
    api "com.cedarsoftware:java-util:1.8.0"
    api group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.1'
    api group: 'commons-codec', name: 'commons-codec', version: '1.11'
    api group: 'com.beust', name: 'jcommander', version: '1.78'
    api group: 'com.typesafe', name: 'config', version: '1.3.2'
    api group: 'io.prometheus', name: 'simpleclient', version: '0.15.0'
    api group: 'io.prometheus', name: 'simpleclient_httpserver', version: '0.15.0'
    api group: 'io.prometheus', name: 'simpleclient_hotspot', version: '0.15.0'
    // https://openjdk.org/jeps/396, JEP 396: Strongly Encapsulate JDK Internals by Default
    // https://eclipse.dev/aspectj/doc/latest/release/JavaVersionCompatibility.html
    api 'org.aspectj:aspectjrt:1.9.8'
    api 'org.aspectj:aspectjweaver:1.9.8'
    api 'org.aspectj:aspectjtools:1.9.8'
    api group: 'io.github.tronprotocol', name: 'libp2p', version: '2.2.5',{
        exclude group: 'io.grpc', module: 'grpc-context'
        exclude group: 'io.grpc', module: 'grpc-core'
        exclude group: 'io.grpc', module: 'grpc-netty'
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
        exclude group: 'com.google.protobuf', module: 'protobuf-java-util'
        // https://github.com/dom4j/dom4j/pull/116
        // https://github.com/gradle/gradle/issues/13656
        // https://github.com/dom4j/dom4j/issues/99
        exclude group: 'jaxen', module: 'jaxen'
        exclude group: 'javax.xml.stream', module: 'stax-api'
        exclude group: 'net.java.dev.msv', module: 'xsdlib'
        exclude group: 'pull-parser', module: 'pull-parser'
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk18on'
        exclude group: 'org.bouncycastle', module: 'bcutil-jdk18on'
    }
    api project(":protocol")
    api project(":platform")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    getExecutionData().setFrom(fileTree('../framework/build/jacoco').include("**.exec"))
    afterEvaluate {
        classDirectories.from = classDirectories.files.collect {
            fileTree(dir: it,)
        }
    }
}
