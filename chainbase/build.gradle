description = "chainbase â€“ a decentralized database for blockchain."

// Dependency versions
// ---------------------------------------
def jansiVersion = "1.16"
// --------------------------------------

dependencies {
    api project(":protocol")
    api project(":common")
    api project(":crypto")
    api "org.fusesource.jansi:jansi:$jansiVersion"
    api 'io.github.tronprotocol:zksnark-java-sdk:1.0.0'
    api 'org.reflections:reflections:0.9.11'
}


test {

    testLogging {
        // showing skipped occasionally should prevent CI timeout due to lack of standard output
        events = ["skipped", "failed"] // "started", "passed"
        // showStandardStreams = true
        exceptionFormat = "full"

        debug.events = ["skipped", "failed"]
        debug.exceptionFormat = "full"

        info.events = ["failed", "skipped"]
        info.exceptionFormat = "full"

        warn.events = ["failed", "skipped"]
        warn.exceptionFormat = "full"
    }

    maxHeapSize = "1200m"

    if (System.getenv("CI") == null) {
        maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    getExecutionData().setFrom(fileTree('../framework/build/jacoco').include("**.exec"))
    afterEvaluate {
        classDirectories.from = classDirectories.files.collect {
            fileTree(dir: it,)
        }
    }
}

build.dependsOn jacocoTestReport
