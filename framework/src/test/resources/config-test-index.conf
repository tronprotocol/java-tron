net {
  //  type = mainnet
  type = testnet
}


storage {
  # Directory for storing persistent data

  db.directory = "database",
  index.directory = "index",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    {
      name = "account",
      path = "storage_directory_test",
      createIfMissing = true,
      paranoidChecks = true,
      verifyChecksums = true,
      compressionType = 1,        // compressed with snappy
      blockSize = 4096,           // 4  KB =         4 * 1024 B
      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
      maxOpenFiles = 100
    },
    {
      name = "account-index",
      path = "storage_directory_test",
      createIfMissing = true,
      paranoidChecks = true,
      verifyChecksums = true,
      compressionType = 1,        // compressed with snappy
      blockSize = 4096,           // 4  KB =         4 * 1024 B
      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
      maxOpenFiles = 100
    },
  ]

  needToUpdateAsset = false

}

node.discovery = {
  enable = true
  persist = true
  external.ip = null
}

node {
  listen.port = 18888

  connection.timeout = 2

  active = [
    # Sample entries:
    # { url = "enode://<hex nodeID>@hostname.com:30303" }
    # {
    #    ip = hostname.com
    #    port = 30303
    #    nodeId = e437a4836b77ad9d9ffe73ee782ef2614e6d8370fcf62191a6e488276e23717147073a7ce0b444d485fff5a0c34c4577251a7a990cf80d8542e21b95aa8c5e6c
    # }
  ]

  p2p {
    version = 43 # 43: testnet; 101: debug
  }

  http {
    fullNodeEnable = false
    solidityEnable = false
    PBFTEnable = false
  }

  jsonrpc {
    httpFullNodeEnable = false
    httpSolidityEnable = false
    httpPBFTEnable = false
  }

  rpc {
    port = 50051
    enable = false
    solidityEnable = false
    PBFTEnable = false
    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =
  }

}

sync {
  node.count = 30
}

seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    "47.254.16.55:18888",
    "47.254.18.49:18888",
    "18.188.111.53:18888",
    "54.219.41.56:18888",
    "35.169.113.187:18888",
    "34.214.241.188:18888",
    "47.254.146.147:18888",
    "47.254.144.25:18888",
    "47.91.246.252:18888",
    "47.91.216.69:18888",
    "39.106.220.120:18888"
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [

  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
}

localwitness = [

]

block = {
  needSyncCheck = true # first node : false, other : true
}
